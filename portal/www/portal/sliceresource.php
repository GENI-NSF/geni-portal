<?php
//----------------------------------------------------------------------
// Copyright (c) 2011-2014 Raytheon BBN Technologies
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and/or hardware specification (the "Work") to
// deal in the Work without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Work, and to permit persons to whom the Work
// is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Work.
//
// THE WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
// IN THE WORK.
//----------------------------------------------------------------------
?>
<?php
require_once("settings.php");
require_once('portal.php');
require_once("user.php");
require_once("file_utils.php");
require_once("sr_client.php");
require_once("sr_constants.php");
require_once("am_client.php");
require_once("am_map.php");
require_once("sa_client.php");
require_once("print-text-helpers.php");
require_once("logging_client.php");
require_once("header.php");
$user = geni_loadUser();
if (!isset($user) || is_null($user) || ! $user->isActive()) {
  relative_redirect('home.php');
}

function no_slice_error() {
  header('HTTP/1.1 404 Not Found');
  print 'No slice id specified.';
  exit();
}

function no_invocation_id_error() {
  header('HTTP/1.1 404 Not Found');
  print 'No omni invocation id and/or user ID specified.';
  exit();
}

// redirect if no attributes passed in
if (! count($_REQUEST)) {
  no_slice_error();
}

// set user ID and invocation
if(array_key_exists("invocation_id", $_REQUEST) && 
        array_key_exists("invocation_user", $_REQUEST)) {
    $invocation_user = $_REQUEST['invocation_user'];
    $invocation_id = $_REQUEST['invocation_id'];
}
else {
    no_invocation_id_error();
}

// set slice information
unset($slice);
include("tool-lookupids.php");
if (! isset($slice)) {
  no_slice_error();
}

// redirect if slice has expired
if (isset($slice_expired) && convert_boolean($slice_expired)) {
  if (! isset($slice_name)) {
    $slice_name = "";
  }
  $_SESSION['lasterror'] = "Slice " . $slice_name . " is expired.";
  relative_redirect('slices.php');
}

// redirect if user isn't allowed to look up slice
if(!$user->isAllowed(SA_ACTION::LOOKUP_SLICE, CS_CONTEXT_TYPE::SLICE, $slice_id)) {
  relative_redirect('home.php');
}

// show header and breadcrumbs
show_header('GENI Portal: Slices',  $TAB_SLICES);
include("tool-breadcrumbs.php");

// set e-mail footer message and from field
$bug_report_footer = "Attached is a bug report generated by " . $user->prettyName() .
    " from the GENI Portal (https://portal.geni.net/).";
$bug_report_from = $user->prettyName();

?>



<!-- JS functions for tailing -->
<script>

user = "<?php echo $invocation_user; ?>";
id = "<?php echo $invocation_id; ?>";
    
debug_log_offset = 0;
console_log_offset = 0;

$( document ).ready( function() {
    getPID(user, id);
    getCommand(user, id);
    getRequestRSpec(user, id);
    updateConsoleLog(user, id, console_log_offset);
    updateDebugLog(user, id, debug_log_offset);
    updateXMLResults(user, id);
    updateElapsedTime(user, id);
    get_console = setInterval( "updateConsoleLog(user, id, console_log_offset)", 1000 );
    get_debug = setInterval( "updateDebugLog(user, id, debug_log_offset)", 1000 );
    get_xml = setInterval( "updateXMLResults(user, id)", 1000 );
    get_elapsed = setInterval( "updateElapsedTime(user, id)", 1000 );
});

function updateConsoleLog(invocationUser, invocationID, offset) {
    $.getJSON('get_omni_invocation_data.php?invocation_user='+invocationUser+'&invocation_id='+invocationID+'&request=console&offset='+offset+'&raw=false',
        function(data) {
            var scrollPositionContainer = $("#console_data_container").scrollTop();
            var dataHeight = $( "#console_data" ).height();
            var containerHeight = $( "#console_data_container" ).height();
            $("#console_bytes_read").html(data.bytes_read);
            $("#console_new_offset").html(data.new_offset);
            $("#console_time").html(data.time);
            // Tail bottom if near the bottom
            if(((scrollPositionContainer + 50) > (dataHeight - containerHeight)) ) {
                $("#console_data").append(data.obj);
                $("#console_data_container").scrollTop($("#console_data").height());
            }
            else {
                $("#console_data").append(data.obj);
            }
            console_log_offset = data.new_offset;
        });
}

function updateDebugLog(invocationUser, invocationID, offset) {
    $.getJSON('get_omni_invocation_data.php?invocation_user='+invocationUser+'&invocation_id='+invocationID+'&request=debug&offset='+offset+'&raw=false',
        function(data) {
            var scrollPositionContainer = $("#debug_data_container").scrollTop();
            var dataHeight = $( "#debug_data" ).height();
            var containerHeight = $( "#debug_data_container" ).height();
            $("#debug_bytes_read").html(data.bytes_read);
            $("#debug_new_offset").html(data.new_offset);
            $("#debug_time").html(data.time);
            debug_log_offset = data.new_offset;
            // Tail bottom if near the bottom
            if(((scrollPositionContainer + 50) > (dataHeight - containerHeight)) ) {
                $("#debug_data").append(data.obj);
                $("#debug_data_container").scrollTop($("#debug_data").height());
            }
            else {
                $("#debug_data").append(data.obj);
            }
        });
}

function updateXMLResults(invocationUser, invocationID) {
    $.getJSON('get_omni_invocation_data.php?invocation_user='+invocationUser+
    '&invocation_id='+invocationID+'&request=stdout&raw=false',
        function(data) {
            if(data.code == 0) {
                $("#prettyxml").html(data.obj);
                stopPolling();
            }
            $("#results_time").html(data.time);
        });
}

function updateElapsedTime(invocationUser, invocationID) {
    $.getJSON('get_omni_invocation_data.php?invocation_user='+invocationUser+
    '&invocation_id='+invocationID+'&request=elapsed&raw=false',
        function(data) {
            if(data.code == 0) {
                $("#pid_elapsed").html(data.obj);
            }
            $("#pid_time").html(data.time);
        });
}

function getPID(invocationUser, invocationID) {
    $.getJSON('get_omni_invocation_data.php?invocation_user='+invocationUser+
    '&invocation_id='+invocationID+'&request=pid',
        function(data) {
            if(data.code == 0) {
                $("#pid_pid").html(data.obj);
            }
        });
}

function getCommand(invocationUser, invocationID) {
    $.getJSON('get_omni_invocation_data.php?invocation_user='+invocationUser+
    '&invocation_id='+invocationID+'&request=command&raw=false',
        function(data) {
            if(data.code == 0) {
                $("#command_data").html(data.obj);
            }
        });
}

function getRequestRSpec(invocationUser, invocationID) {
    $.getJSON('get_omni_invocation_data.php?invocation_user='+invocationUser+
    '&invocation_id='+invocationID+'&request=requestrspec&raw=false',
        function(data) {
            if(data.code == 0) {
                $("#requestrspec_data").html(data.obj);
            }
        });
}

function stopPolling() {
    clearInterval(get_xml);
    clearInterval(get_debug);
    clearInterval(get_console);
    clearInterval(get_elapsed);
}
    
</script>

<?php echo "<h1>Add Resources to GENI Slice: $slice_name</h1>"; ?>

<?php
    echo "<div style='position:relative;'>";
    echo "<p style='margin-left:0px;'>Total run time: <b><span id='pid_elapsed'></span></b></p>";
    echo "<div style='position:absolute;top:0px;right:0px;'>";
    echo "<p style='margin:0px;'>Last updated: <b><span id='pid_time'></span></b></p>";
    echo "</div></div>";
?>

  <div id='tablist'>
		<ul class='tabs'>
			<li><a href='#tab_progress_results'>Progress and Results</a></li>
			<li><a href='#tab_request_rspec'>Request RSpec</a></li>
			<li><a href='#tab_send_bug_report'>Send Bug Report</a></li>
			<li style="border-right: none"><a href='#tab_advanced'>Advanced</a></li>
		</ul>
  </div>

<!-- begin tab content -->
<div class='tabContent'>

<!-- progress / results tab -->
<div id='tab_progress_results'>

<h2>Progress</h2>
<pre id='console_data_container' style="height:300px;">
<span id='console_data'></span>
</pre>

<h2>Results</h2>
<div class='resources' id='prettyxml'>
</div>

</div>

<!-- request RSpec tab -->
<div id='tab_request_rspec'>

<h2>Request RSpec</h2>
<pre id='requestrspec_container'><span id='requestrspec_data'></span></pre>

</div>

<!-- send bug report tab -->
<div id='tab_send_bug_report'>

<h2>Send a Bug Report</h2>
<p>Fill out the following form to send a bug report. Bug reports will include the <b>progress log</b>, <b>debug log</b>, <b>error log</b>, <b>request RSpec</b>, and <b>process information</b>.</p>
<p>User-sensitive information, such as slice credentials, will <i>not</i> be included.</p>

<table>
<tr>
<th>From</th>
<td><?php echo $bug_report_from;?></td>
</tr>
<tr>
<th>Send To <small>(Required)</small></th>
<td> </td>
</tr>
<tr>
<th>Copy To <small>(Optional)</small></th>
<td> </td>
</tr>
<tr>
<th>Message <small>(Required)</small></th>
<td> </td>
</tr>
<tr>
<th>Footer</th>
<td><tt><?php echo $bug_report_footer;?></tt></td>
</tr>
<tr>

</tr>
</table>

</div>

<!-- advanced tab -->
<div id='tab_advanced'>

<h2>Debug Log</h2>
<pre id='debug_data_container' style="height:300px;">
<span id='debug_data'></span>
</pre>

<h2>Command</h2>
<pre id='command_data_container'><span id='command_data'></span></pre>



<h2>Statistics</h2>
<div id="hide" style="display:none;"><h3>Console Log</h3>
<p>Bytes read: <b><span id='console_bytes_read'></span> bytes</b>, New offset: <b><span id='console_new_offset'></span> bytes</b>, Last read: <b><span id='console_time'></span></b></p>
<h3>Debug Log</h3>
<p>Bytes read: <b><span id='debug_bytes_read'></span> bytes</b>, New offset: <b><span id='debug_new_offset'></span> bytes</b>, Last read: <b><span id='debug_time'></span></b></p>
<h3>Results</h3>
<p>Last read: <b><span id='results_time'></span></b></p></div>
<h3>PID</h3>
<p><b><span id='pid_pid'></span></b></p>

</div>

<!-- end tab content -->
</div>
<?php

include "tabs.js";
include("footer.php");
?>
