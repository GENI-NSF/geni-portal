#!/usr/bin/env python
# -*- Mode: python -*-

import sys
import logging
import optparse
import psycopg2

def init_logging(options):
    level = logging.INFO
    if options.debug:
        level = logging.DEBUG
    logging.basicConfig(level=level)

def get_database_password(options):
    if options.password:
        return options.password
    if options.password_file:
        f = open(options.password_file, 'r')
        password = f.readlines()[0].strip()
        f.close()
        return password
    return None

def parse_args(argv):
    usage = "usage: %prog [options] client_name client_urn"
    parser = optparse.OptionParser(usage=usage)
    parser.add_option("--debug", action="store_true", default=False,
                       help="enable debugging output")
    parser.add_option("-d", "--database", default='portal',
                      help="database name")
    parser.add_option("--host", default='localhost',
                      help="database host")
    parser.add_option("-u", "--user", default='portal',
                      help="database user")
    parser.add_option("-p", "--password",
                      help="database password")
    parser.add_option("-P", "--password-file",
                      help="file containing database password")
    options,args = parser.parse_args()
    if len(args) < 2:
        parser.print_usage()
        sys.exit(2)
    return options,args

def main(argv=None):
    if argv is None:
        argv = sys.argv
    try:
        options,args = parse_args(argv)
        init_logging(options)
    except Exception as e:
        sys.stderr.write(str(e) + "\n")
        return 1
    client_name = args[0]
    client_urn = args[1]
    connect_args = dict(database=options.database,
                        user=options.user,
                        host=options.host)
    password = get_database_password(options)
    if password:
        connect_args['password'] = password
    query = 'INSERT INTO ma_client (client_name, client_urn) VALUES (%s, %s)'
    try:
        conn = psycopg2.connect(**connect_args)
        cur = conn.cursor()
        cur.execute(query, (client_name, client_urn))
        cur.close()
        conn.commit()
    except psycopg2.Error as e:
        msg = "Database error: %s\n" % (str(e))
        sys.stderr.write(msg)
        return 1
    return 0

if __name__ == "__main__":
    sys.exit(main())
