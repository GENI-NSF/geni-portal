\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename geni-portal.info
@settitle The GENI Portal and Clearinghouse
@c %**end of header

@include version.texi

@c combine the program index into the concept index
@syncodeindex pg cp

@copying
Copyright @copyright{} 2015-2016 Raytheon BBN Technologies

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and/or hardware specification (the "Work") to
deal in the Work without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Work, and to permit persons to whom the Work
is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Work.

THE WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
IN THE WORK.
@end copying

@titlepage
@title The GENI Portal and Clearinghouse
@subtitle Version @value{VERSION}
@subtitle @value{UPDATED-MONTH}
@author Marshall Brinn
@author Aaron Helsinger
@author Tom Mitchell
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c Output the table of the contents at the beginning.
@contents

@ifnottex
@node Top
@top GENI Portal

@insertcopying
@end ifnottex

@menu
* Introduction::    Introduction.
* Installation::     Installation guide for CentOS 6.5.
* Operations::       Operator's guide.
* System Administration:: Administrator's guide.
* Updating geni-soil::  Updating geni-soil.
* Moving data to a new server:: Moving data to a new server.
* Index::            Complete index.
@end menu


@node Introduction
@chapter Introduction

@cindex introduction
@cindex PHP
@cindex Python
@cindex XML-RPC

The GENI Portal and Clearinghouse consist of two main bodies
of software. The portal is a web site written in PHP. The
clearinghouse is an XML-RPC server written in Python.



@node Installation
@chapter Installation

@cindex installation

This chapter describes installing the GENI Portal and Clearinghouse on
CentOS 6.5.

@section Prepare the host

@subsection Disable SELinux
The GENI Portal and Clearinghouse are not compatible with SELinux, so
it must be disabled. To test for SELinux, use the @command{sestatus}
command.

@example
$ sestatus
SELinux status:                 disabled
@end example

@noindent
If SELinux is enabled, google ``CentOS disable SELinux'' for
instructions. Do not proceed until SELinux has been disabled.

@subsection Disable Firewall

@c FIXME
@emph{N.B. This should not be necessary and this step should be fixed.}

Disable iptables during installation. Check for the minimum ports
later in the document.

@example
sudo service iptables stop
@end example

@section Install Shibboleth

@emph{This section will be filled in later.}

@section Install GENI Portal

@emph{This section will be filled in later.}

@emph{Include dependency on python-psutil for geni-watch-omni.}

@section Install GENI Clearinghouse

@subsection Install ABAC

@example
cd /usr/share/geni-ch
sudo bash
wget abac.deterlab.net/src/abac-0.1.7.tar.gz
ln -s /usr/lib64/libltdl.so.7.2.1 /usr/lib64/libltdl.so
tar xvzf abac-0.1.7.tar.gz
ln -s abac-0.1.7 abac
cd abac
./configure --prefix=/usr --sysconfdir=/etc --bindir=/usr/local/bin \
        --sbindir=/usr/local/sbin PYTHON_VERSION='2.7' \
        --with-site-perl=/usr/local/share/perl5
make
make install
ln -s /usr/lib/python2.7/site-packages/_ABAC.* \
        /usr/local/lib/python2.7/site-packages/
exit
@end example

@subsection Install chapi

@example
cd chapi/tools
touch ../etc/geni-chapi-githash
install-chapi-centos.sh
@end example

@subsection Configure @code{xinetd}
@code{xinetd} is required to serve the Flash security policy which
enabled Flack to connect to the clearinghouse. First ensure that
@code{xinetd} is installed:

@example
yum install xinetd
@end example

@noindent
Next, add the Flash security policy service to @code{/etc/services} as
follows:

@example
flashpolicy	843/tcp			# Flash Policy service
@end example

@noindent
Finally, configure @code{xinetd} to server the flash policy by adding
a file named ``flashpolicy'' to the directory
@code{/etc/xinetd.d}.

@example
cp chapi/etc/xinetd.d/flashpolicy /etc/xinetd.d/flashpolicy
@end example

@section Installing Updates

From time to time new versions of the GENI portal and clearinghouse
software are released. Updating your system to the new versions of
software is generally an easy process.

Releases may be accompanied by special instructions that must be
performed before and/or after installing the new version of the
software. These special instructions are not covered by this manual.

@subsection Updating @code{chapi}
@cindex installing updates
@cindex update
@cindex chapi

Updating the clearinghouse software (``chapi'') from git involves
first updating to the latest revision of the software. Once the latest
version of software is obtained, execute the following commands:
@example
autoreconf --install
./configure --prefix=/usr --sysconfdir=/etc --bindir=/usr/local/bin \
        --sbindir=/usr/local/sbin --mandir=/usr/local/man
make
sudo make install
sudo service apache2 restart
@end example

@subsection Updating @code{proto-ch}
@cindex installing updates
@cindex update
@cindex proto-ch
Updating the portal software (``proto-ch'') from git is very similar
to the updating the clearinghouse software above.  First update to the
latest revision of the software. Once the latest version of software
is obtained, execute the following commands:
@example
autoreconf --install
./configure --prefix=/usr --sysconfdir=/etc --bindir=/usr/local/bin \
        --sbindir=/usr/local/sbin --mandir=/usr/local/man
make
sudo make install
@end example


@node Operations
@chapter Operations

@section Introduction

@section Configuration

Some of the configuration files:
@itemize @bullet
@item @code{/etc/geni-ch/settings.php}
@item @code{/etc/geni-ch/services.ini}
@item @code{/etc/geni-chapi/chapi.ini}
@item @code{/etc/geni-chapi/logging_config.conf} (??)
@end itemize


@section Project Lead Privileges
@cindex lead, project
@cindex project lead
@pindex geni-add-member-privilege
@pindex geni-revoke-member-privilege
User privileges are elevated by the @code{geni-add-member-privilege}
program. For instance, to elevate a user's privileges so that they can
act as a project lead and manage their own projects, invoke
@code{geni-add-member-privilege} with the @code{-l} option to grant
project lead privilege.
@example
geni-add-member-privilege -k <private key> -c <certificate> \
        -u https://ch.geni.net/ -l -m <member id>
@end example

@section Disabling Users
@cindex lead, project
@cindex disable user
@pindex geni-list-member-projects
@pindex geni-disable-user
@pindex geni-remove-project-member
@pindex geni-revoke-member-privilege
User accounts sometimes need to be disabled. When email bounces to a user,
or when a tutorial account expires, the account should be disabled. It is
possible to reenable an account later if necessary.

The first step in disabling a user is to determine their membership in
projects. Users should first be removed from projects before they are
disabled. To make this determination, use @code{geni-list-member-projects}.

@example
geni-list-member-projects -k <private key> -c <certificate> \
        -u https://ch.geni.net/ -e -m <username>
@end example

This will display a list of projects and the user's role in each. Roles
include LEAD, ADMIN, MEMBER, and AUDITOR. If they are a LEAD on any project
that project must be handed off to another qualifying project lead. This
may require adding a project lead with @code{geni-add-project-member}.

For each project listed, the user should be removed from that project.

@example
geni-remove-project-member -k <private key> -c <certificate> \
        -u https://ch.geni.net -p <project name> -m <username>
@end example

Remove lead privilege if the user has it (this command is a no-op if
they do not have lead privilege so it is safe to run).
@example
geni-revoke-member-privilege -k <private key> -c <certificate> \
        -u https://ch.geni.net/ -l -m <member id>
@end example


Finally, after the user is removed from all of their projects, the
account can be disabled.

@example
geni-disable-user -k <private key> -c <certificate> \
        -u https://ch.geni.net -m <username>
@end example


@node System Administration
@chapter System Administration

@section @code{cron} jobs
@cindex cron

@subsection Clean @code{/tmp}
@cindex /tmp
The GENI portal creates directories in @code{/tmp} to capture logs of
commands run with @code{omni}, a GENI client tool. These log files
stay around so that a GENI experimenter can refer to them later. As a
result, these log directires need to be cleaned up periodically.

The @code{crontab} entry below deletes omni logs that are more than
seven days old.

@emph{N.B. The entry below must appear on a single line, without the
backslash. The use of backslash and multiple lines is for readability
in this document}

@example
# Delete omni log files in /tmp
55 23 * * * /bin/find /tmp -name '*-omni-log-??????' -mtime +7 \
        | /usr/bin/xargs /bin/rm -f
@end example

@subsection Generate Certificate Revocation List
@cindex CRL
It is possible, although rare, to revoke a certificate issued by the
member authority. Revoked certificates are added to a certificate
revocation list (CRL). This list must be periodically generated so
that the Apache server has an unexpired CRL available. The
@code{crontab} entry below generates a CRL nightly. This is entry is
needed even if no certificates have ever been revoked. In this case,
the CRL is valid but empty.

@emph{N.B. The entry below must appear on a single line, without the
backslash. The use of backslash and multiple lines is for readability
in this document}
@example
# Create the member authority CRL
10 2 * * * /usr/local/sbin/geni-create-ma-crl \
        && /sbin/service httpd restart
@end example

@subsection Expiring certificate notifications
GENI experimenters use certificates to authenticate communications to
GENI services. These certificates have an expiration (generally one
year). The @code{crontab} entry below generates email to experimenters
whose certificates will expire a certain number of days in the
future. In the example below, experimenters whose certificates expire
30 days in the future, 14 days, 7 days, and 2 days will receive email
telling them they should renew their certificate.

@example
# Notify users of expiring certificates
5 1 * * * /usr/local/sbin/geni-expiring-certs --days 30,14,7,2
@end example

@subsection Detect long-running omni processes
Occasionally an operation involving one or more aggregates will take a
long time to complete. For example, an attempt to create a stitched
topology across several aggregates can take many minutes. The
@code{crontab} entry below detects long-running @code{omni} or
@code{stitcher} jobs and reports them to administrators. The jobs are
not killed. This is only a reporting mechanism.

If a long-running @code{omni} or @code{stitcher} job is reported it is
generally best to leave it alone. If a job goes on for longer than 45
- 60 minutes for some reason, the adminitrator can kill the job using
the @code{kill} command with the default signal (@code{TERM}).

@example
# Check for long-running omni processes every 5 minutes
*/5 * * * * /usr/local/bin/geni-watch-omni
@end example

@subsection Sync wireless groups and accounts
@cindex wireless
@pindex geni-sync-wireless
For integration with wireless testbeds the GENI portal can synchronize
GENI projects and users with wireless LDAP databases. In order to keep
these two systems in sync a cron job runs a script periodically (nominally
once a day) to synchronize all groups and accounts.

@example
# Synchronize with wireless testbeds
# Sync wireless groups and accounts
00 2 * * * /usr/local/bin/geni-sync-wireless --cleanup
@end example


@section Log files

@subsection Apache portal error log file
@cindex log files
@cindex Apache
The GENI portal software writes to the Apache log file. This is a good
first place to look when things have gone wrong. The portal log file
will provide information about frontend UI software errors,
omni/stitcher commands executed, and indications that there are
problems with the clearinghouse.

The location of this log file depends on the configuration of your
Apache web server. Typically, it will be found at
@code{/var/log/httpd/portal_error.log} on Red Hat/CentOS and in
@code{/var/log/apache2/portal_error.log} on Debian/Ubuntu.

@subsection Clearinghouse log file
@cindex log files
The GENI clearinghouse software writes to its own log file. The
location of this log file can be configured in
@code{/etc/geni-chapi/chapi.ini}. The default location of the
clearinghouse log file is @code{/var/log/geni-chapi/chapi.log}.

While it is possible to change the location of the log file it is
likely that there are dependencies on the default location. Changing
the location is not recommended.

@subsection Apache clearinghouse log file
@cindex log files
@cindex Apache
Certain issues can cause the clearinghouse software to fail on
start. If this happens, or might be happening, consult the Apache log
file configured in the Apache configuration file for the clearinghouse
server. Typically this file will be found at
@code{/var/log/httpd/ch_error.log} on Red Hat/CentOS and in
@code{/var/log/apache2/ch_error.log} on Debian/Ubuntu.

@subsection AMsoil log file
@cindex log files
@cindex AMsoil
The GENI clearinghouse relies on a service library called
AMsoil. AMsoil provides an XML-RPC base upon which the GENI
clearinghouse services are built. AMsoil has its own log file,
@code{/usr/share/geni-ch/chapi/AMsoil/log/amsoil.log}. This log file
will include startup messages for AMsoil. It will only be useful in
rare cases.

@subsection Apache error log file
@cindex log files
@cindex Apache
In rare circumstances it is useful to look at Apache's own error log
file. Some configuration issues will result in messages in this log
file. This log file is typically located at
@code{/var/log/httpd/error.log} on Red Hat/CentOS and in
@code{/var/log/apache2/error.log} on Debian/Ubuntu.


@section Common errors
This section outlines some common errors and their solution.

@subsection CRL error
@cindex CRL error
In the file @code{/var/log/apache2/ch_error.log} the following errors
are listed.

@example
Found CRL is expired - revoking all certificates until you get
       updated CRL
Certificate Verification: Error (12): CRL has expired
@end example

@noindent
The remedy for this error is to run the @code{geni-create-ma-crl} program and
restart the web server:
@example
sudo /usr/local/sbin/geni-create-ma-crl
sudo service apache2 restart
@end example


@node Updating geni-soil
@appendix Updating geni-soil
@cindex geni-soil
@cindex AMsoil
geni-soil is a Python library that the GENI clearinghouse software uses
to provide a framework for XML-RPC services. It should be a rare
occurrence to update geni-soil. If an update is necessary, here are the
steps to perform the update on the clearinghouse host.

geni-soil was originally called AMsoil when it was part of the OFELIA
project. That name had copyright issues so it was renamed. There are
still references to the old name ``AMsoil''.

@example
# Change these as necessary for your OS
export APACHE_USER=www-data
export APACHE_GROUP=www-data

# Change this to the current version of geni-soil
export SOIL_TAG=gpo-0.3.3

export SOIL_FILE="$@{SOIL_TAG@}".tar.gz

# Download the geni-soil tar file
cd /tmp
wget https://github.com/GENI-NSF/geni-soil/archive/"$@{SOIL_FILE@}"

# Put the geni-soil tar file in the chapi install directory
cd /usr/share/geni-ch/chapi
sudo mv "$@{SOIL_TAG@}".tar.gz /usr/share/geni-ch/chapi

#Untar the file:
sudo tar zxf geni-soil-"$@{SOIL_TAG@}".tar.gz

# Remove the old link
sudo rm -f AMsoil

# Point at the new version of geni-soil
sudo ln -s geni-soil-"$@{SOIL_TAG@}" AMsoil

# Create symlinks to the chapi geni-soil plugins
for f in chapi/plugins/*; do
 if [ -d $f ]; then
   echo "Linking $f"
   sudo ln -s ../../../$f AMsoil/src/plugins
 fi
done

# Remove unused geni-soil plugins
for pl in dhcprm dhcpgeni3 mailer worker geniv3rpc
do
    sudo rm AMsoil/src/plugins/$pl
done

sudo chown "$@{APACHE_USER@}"."$@{APACHE_GROUP@}" AMsoil/deploy
sudo chown "$@{APACHE_USER@}"."$@{APACHE_GROUP@}" AMsoil/log

# Restart apache to get the new version of geni-soil
sudo service apache2 restart
@end example


@node Moving data to a new server
@appendix Moving data to a new server
@section Export database
@example
pg_dump --clean -U portal -h localhost portal > db-dump.sql
gzip db-dump.sql
@end example

@section Gather other files
@enumerate
@item Archive the CA directory, which can be large
@example
tar czf CA.tar.gz /usr/share/geni-ch/CA
@end example
@item Create a manifest for the rest of the files for @code{tar}
@example
/usr/share/geni-ch/cs/cs-cert.pem
/usr/share/geni-ch/cs/cs-key.pem
/usr/share/geni-ch/km/km-cert.pem
/usr/share/geni-ch/km/km-key.pem
/usr/share/geni-ch/logging/logging-cert.pem
/usr/share/geni-ch/logging/logging-key.pem
/usr/share/geni-ch/ma/ma-cert.pem
/usr/share/geni-ch/ma/ma-key.pem
/usr/share/geni-ch/pa/pa-cert.pem
/usr/share/geni-ch/pa/pa-key.pem
/usr/share/geni-ch/portal/portal-cert.pem
/usr/share/geni-ch/portal/portal-key.pem
/usr/share/geni-ch/sa/sa-cert.pem
/usr/share/geni-ch/sa/sa-key.pem
/usr/share/geni-ch/sr/sr-cert.pem
/usr/share/geni-ch/sr/sr-key.pem
/etc/geni-chapi/http-bundle.pem
@end example
@item Run tar with that manifest
@example
tar czTf manifest.txt migration.tar.gz
@end example
@end enumerate

@section Install files on new server
@example
sudo tar Cxzf / migration.tar.gz
sudo tar Cxzf / CA.tar.gz
gunzip db-dump.sql.gz

# Replace the user, hostname, and database name as needed
# psql -U USER -h HOST -f FILE DATABASE
psql -U portal -h localhost -f db-dump.sql portal

# Put Equifax certificate in expected location
sudo cp Equifax_Secure_CA.pem /etc/ssl/certs

@end example

Optionally install the GPO Lab CA certificate if the file exists in
the migration data directory:

@example
sudo cp ca_gpolab.crt /etc/ssl/certs
@end example


@section Fix permissions in CA directory
Many files and directories under @code{/usr/share/geni-ch/CA} must be
readable and writable by the user associated with the web server
process. On Ubuntu this is typically @code{www-data} and on CentOS
this is usually @code{apache}. If most (but not all) files in
@code{/usr/share/geni-ch/CA} are owned by the correct user, skip this
step.

If you need to update permissions, use a comand like the following,
which updates the files for CentOS by making them owned by user
``apache'' and group ``apache''. Substitute the correct user and group
as necessary for your own environment.

@emph{Note: this command may take a long time to run.}

@example
sudo find /usr/share/geni-ch/CA -user 33 -exec chown apache:apache @{@} \;
@end example


@section Update bundle
@emph{These instructions only apply to CentOS 6.}

Due to a limitation in the curl library, the bundle of trusted
certificates for the clearinghouse web server must be updated to
include the MA certificate. Run the following command as root to
include the MA certificate in the bundle:
@example
cat /usr/share/geni-ch/ma/ma-cert.pem >> /etc/geni-chapi/http-bundle.pem
@end example

@section Edit chapi config file
Regardless of the DNS, the clearinghouse configuration file must be
updated to the new authority (i.e. host) name. Edit the file
@code{/etc/geni-chapi/chapi.ini} to set the ``authority'' in the
``chrm'' section to the new host name. This section of the
configuration file will look something like this:

@example
[chrm]

; name of CH/SA/MA authority
; This is probably the hostname, or a CNAME alias for the host
authority=dest.example.com
@end example

Change the @code{authority} from the destination host name to the
origin host name. In this example, origin host name is
@code{origin.example.com}, so the updated configuration would look
like this:

@example
[chrm]

; name of CH/SA/MA authority
; This is probably the hostname, or a CNAME alias for the host
authority=origin.example.com
@end example

@section Configure host: no DNS update
@emph{This step is only necessary if the new server will use a
different domain name than the original server.}
@c render the single quotes properly for copy/paste
@set codequoteundirected on
@example
update service_registry
  set service_url = replace(service_url,
                            'origin.example.com',
                            'dest.example.com')
  where service_url like '%origin.example.com%';
@end example
@set codequoteundirected off

@section Configure host: DNS update
This step is only necessary if the new, or ``target'' server will use the same
domain name than the origin server.

@subsection Update portal settings for new hostname
Edit the @code{/etc/geni-ch/services.ini} file to update two settings:

@itemize
@item
In the @code{DEFAULT} section change @code{authority} to the new
hostname
@item
Also in the @code{DEFAULT} section change @code{servicehost} to
the new hostname
@end itemize

Edit the @code{/etc/geni-ch/settings.php} file to update two settings:

@itemize
@item
Change @code{$service_registry_url} to use the new hostname
@item
Change @code{$genilib_trusted_host} to use the new hostname
@end itemize

@subsection Update shibboleth configuration for new hostname
@cindex Shibboleth
When changing the DNS records, the Shibboleth configuration on the
target host needs to be updated. The target host will need the
certificate and private key from the origin host. Run the following
command to install these two files:
@example
cp sp-cert.pem /etc/shibboleth/sp-cert.pem
cp sp-key.pem /etc/shibboleth/sp-key.pem
@end example

Additionally, the Shibboleth configuration on the target host must be
updated with the correct entries. The file is
@code{/etc/shibboleth/shibboleth2.xml}. The following changes need to
be made:
@itemize
@item Change the @code{entityID} in the @code{ApplicationDefaults} tag
to the value from the origin @emph{portal} host
@item Change the @code{discoveryURL} in the @code{SSO} tag to the
origin @emph{portal} host name
@end itemize

@subsection Update SSL certificates for new hostname
The apache SSL certificates must be moved into place. The destination
directory varies by OS:
@itemize
@item CentOS: @code{/etc/pki/tls/certs}
@item Ubuntu: @code{/etc/ssl/certs}
@end itemize

There are usually two files to move into place, one for the
clearinghouse and one for the portal. The examples below use a
CERT_DIR environment variable to denote the correct location from
above:
@example
cp PORTAL-HOST.pem "$@{CERT_DIR@}"
cp CH-HOST.pem "$@{CERT_DIR@}"
@end example

@subsection Update Apache configuration for new hostname
Update the Apache configuration files for both the portal and
clearinghouse to reflect the origin hostname. The two files that need
editing are named @code{ch-ssl} and @code{portal-ssl} in one of the
following two directories:

@itemize
@item CentOS: @code{/etc/httpd/sites-enabled}
@item Ubuntu: @code{/etc/apache2/sites-available}
@end itemize

In both files, modify the following directives wherever they
appear. These directives probably appear once in @code{portal-ssl} and
up to three times in @code{ch-ssl}.

@itemize
@item @code{ServerName}
@item @code{SSLCertificateFile}
@item @code{SSLCertificateKeyFile}
@item @code{ServerAlias} (only if present in the file)
@end itemize

Because there are multiple occurrences of these directives in the
files it is useful to check using @code{grep} to make sure all
instances have been updated. Use commands like the following:

@example
grep -n ServerName ch-ssl portal-ssl
grep -n SSLCertificateFile ch-ssl portal-ssl
grep -n SSLCertificateKeyFile ch-ssl portal-ssl
grep -n ServerAlias ch-ssl portal-ssl
@end example

If necessary, update @code{SSLCertificateChainFile}. If the new SSL
certificates configured above require a chain file, set the directive
appropriately. If the new SSL certificates do not require a chain
file, ensure that the directives are commented out from the files.

@subsection Update DNS
Now that the data has been moved the DNS server can be reconfigured to
point to the new host. Additionally if a Shibboleth identity provider
needs to be updated to include this now host, that can be done as
well.

@section Final tasks
Run the following commands to finalize the configuration:
@example
sudo geni-create-ma-crl

# On CentOS:
sudo service httpd restart

# On Ubuntu:
sudo service apache2 restart
@end example

@section Things to check
@enumerate
@item
Service certificates -- are the correct set of service
certificates installed on the destination host? If not the portal will
die with a ``too many redirects'' error on the first page load.
@item
Is @code{/etc/geni-ch/jacks-context.json} up to date?
@end enumerate

@node Index
@unnumbered Index

@printindex cp

@bye
